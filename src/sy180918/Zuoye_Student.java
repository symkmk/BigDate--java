package sy180918;
/**
 *	合理的封装 Person 类
 *
 *	1. 确定描述的是人这个群体  取名为 Person
 *
 *	2. 抽离人这个群体的共性   用代码描述
 *		
 *		属性 : 名字 性别 年龄 ...
 *		能力 : 吃饭 睡觉 打豆豆
 *
 *	3. 合理的封装该类  需要五个部分 
 *		1. 属性
 *			封装强调了 封 , 这个封 是封闭隔离的含义
 *			不让外界 直接访问到我们的属性(对象.属性名 就是直接访问)  保留一定的隐私
 *			如非特别需要 属性由 private 修饰 
 *			private 是私有的权限修饰符
 *
 *			1.1 
 *			所有的属性私有化   , 可以保护自己隐私  。
 *			全部私有化也没有问题  , 我们可以让外界间接到访问到 属性
 *			我们可以定义 设定器 访问器 , 让外界过 设定器 访问器来 访问 和 修改属性的值
 *
 *
 *			1.2 
 *			属性声明类型要适合 
 *
 *
 *			1.3
 *			属性如非特殊需要 , 不要赋值 
 *			但反赋值之后 , 该类的所有对象都是同样的值
 *			不赋值 构建对象之后发现属性都是 默认值  我们会定义构造器 给对象赋值
 *
 *
 *
 *		2. 构造器(也叫 构造方法  区别于普通方法)
 *
 *			每个类都会有构造器 , 因为如果类不定义构造器 , 那么 编译器会默认的给 类 增加一个无参构造器
 *			无参构造器内容 :
 *				public 类名(){	// 方法体为空
 *				}
 *	
 *			构造器作用  ?
 *				new xxx([实参]); 这是创建对象
 *				new xxx 关键字会创建对象   创建完对象之后会进入到指定的构造方法中 
 *				进入构造方法时 对象已经创建完毕	构造器就负责给对象的属性赋值
 *
 *				构造器支持重载  实参决定了进入那个构造器
 *				如果new 了没有的构造器 , 会报错
 *			
 *			
 *			
 *		3. 访问器 (get 方法)
 *			
 *			属性大都是私有化的  有时候我们的属性需要让外界 获得到值
 *			私有化属性出了本类   均不能够直接访问   因为没有权限
 *			因此我们要定义访问器  访问器就是给外界一个间接访问私有属性的方式
 *
 *			访问器 由 一个或多个 get 方法构成   为了 见名知意 和 约定成俗 取名get+属性名
 *
 *			访问器 针对属性的访问
 *			1个属性对应一个 访问方法   该方法名字为  get属性名()
 *
 *			方法命名约定  :  首个单词全部小写 之后每一个单词首字母大写   
 *			属性 局部变量 同 方法命名约定
 *			类命名约定  :  所有的单词 首字母大写
 *			常量  : 全部大写  单词之间 下划线分割   例如 : MAX_VALUE
 *
 *		4. 设定器 (set 方法)
 *
 *			属性私有化 , 我们有时在外界要修改属性的值  , 但是没有权限  不能够直接修改 
 *			设定器 就是给外界 间接的修改 私有化属性值的 一种方式
 *			设定器就是 1个或多个 set 方法组成
 *			作用就是修改属性值  方法名字   : set属性名();
 *
 *		
 *		5. 功能方法 
 *			根据对象的能力 来决定方法的定义
 *
 *			每个对象 都可以有一个自我介绍的能力
 *			把自己的信息  转换成 字符串描述   
 *			每个对象被放到输出语句中  都会调用其  toString() 方法
 *			每个对象都有 该方法  如果不定义该方法 会有默认的(来源于继承的)
 *
 *
 *
 *	方法重载 :
 *		基础  同一个类中  
 *		方法的名字相同  方法的形参列表不同  这就是方法的重载
 *	形参列表不同 表现在那些方面  ?
 *		参数类型不同
 *		参数个数不同
 *		参数顺序不同
 *
 *
 */
public class Zuoye_Student
{
	private String name;
	private int age;
	private boolean sex;
	
	public boolean isSex()
	{
		return sex;
	}

	public void setSex(boolean sex)
	{
		this.sex = sex;
	}

	public Zuoye_Student()
	{
		
	}
	
	public Zuoye_Student(String name,int age)
	{
		this.name=name;
		this.age=age;
	}
	public String getName()
	{
		return name;
	}
	public int getAge()
	{
		return age;
	}
	public void setName(String name)
	{
		this.name=name;
	}
	public void srtAgr(int age)
	{
		this.age=age;
	}
	public String toString()
	{
		return "student"+","+name+","+age;
	}

}
